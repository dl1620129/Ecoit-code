/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ecoit.elegaldocument.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.ShardedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the LegalSigner service. Represents a row in the &quot;ecoit_doc_LegalSigner&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.ecoit.elegaldocument.model.impl.LegalSignerModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.ecoit.elegaldocument.model.impl.LegalSignerImpl</code>.
 * </p>
 *
 * @author Liverpool
 * @see LegalSigner
 * @generated
 */
@ProviderType
public interface LegalSignerModel extends BaseModel<LegalSigner>, ShardedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a legal signer model instance should use the {@link LegalSigner} interface instead.
	 */

	/**
	 * Returns the primary key of this legal signer.
	 *
	 * @return the primary key of this legal signer
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this legal signer.
	 *
	 * @param primaryKey the primary key of this legal signer
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the sig ID of this legal signer.
	 *
	 * @return the sig ID of this legal signer
	 */
	public long getSigId();

	/**
	 * Sets the sig ID of this legal signer.
	 *
	 * @param sigId the sig ID of this legal signer
	 */
	public void setSigId(long sigId);

	/**
	 * Returns the group ID of this legal signer.
	 *
	 * @return the group ID of this legal signer
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this legal signer.
	 *
	 * @param groupId the group ID of this legal signer
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this legal signer.
	 *
	 * @return the company ID of this legal signer
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this legal signer.
	 *
	 * @param companyId the company ID of this legal signer
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this legal signer.
	 *
	 * @return the user ID of this legal signer
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this legal signer.
	 *
	 * @param userId the user ID of this legal signer
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this legal signer.
	 *
	 * @return the user uuid of this legal signer
	 */
	public String getUserUuid();

	/**
	 * Sets the user uuid of this legal signer.
	 *
	 * @param userUuid the user uuid of this legal signer
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the created date of this legal signer.
	 *
	 * @return the created date of this legal signer
	 */
	public Date getCreatedDate();

	/**
	 * Sets the created date of this legal signer.
	 *
	 * @param createdDate the created date of this legal signer
	 */
	public void setCreatedDate(Date createdDate);

	/**
	 * Returns the modified date of this legal signer.
	 *
	 * @return the modified date of this legal signer
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this legal signer.
	 *
	 * @param modifiedDate the modified date of this legal signer
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the created by user of this legal signer.
	 *
	 * @return the created by user of this legal signer
	 */
	public long getCreatedByUser();

	/**
	 * Sets the created by user of this legal signer.
	 *
	 * @param createdByUser the created by user of this legal signer
	 */
	public void setCreatedByUser(long createdByUser);

	/**
	 * Returns the modified by user of this legal signer.
	 *
	 * @return the modified by user of this legal signer
	 */
	public long getModifiedByUser();

	/**
	 * Sets the modified by user of this legal signer.
	 *
	 * @param modifiedByUser the modified by user of this legal signer
	 */
	public void setModifiedByUser(long modifiedByUser);

	/**
	 * Returns the first name of this legal signer.
	 *
	 * @return the first name of this legal signer
	 */
	@AutoEscape
	public String getFirstName();

	/**
	 * Sets the first name of this legal signer.
	 *
	 * @param firstName the first name of this legal signer
	 */
	public void setFirstName(String firstName);

	/**
	 * Returns the last name of this legal signer.
	 *
	 * @return the last name of this legal signer
	 */
	@AutoEscape
	public String getLastName();

	/**
	 * Sets the last name of this legal signer.
	 *
	 * @param lastName the last name of this legal signer
	 */
	public void setLastName(String lastName);

	/**
	 * Returns the language of this legal signer.
	 *
	 * @return the language of this legal signer
	 */
	@AutoEscape
	public String getLanguage();

	/**
	 * Sets the language of this legal signer.
	 *
	 * @param language the language of this legal signer
	 */
	public void setLanguage(String language);

	/**
	 * Returns the status signer of this legal signer.
	 *
	 * @return the status signer of this legal signer
	 */
	public boolean getStatusSigner();

	/**
	 * Returns <code>true</code> if this legal signer is status signer.
	 *
	 * @return <code>true</code> if this legal signer is status signer; <code>false</code> otherwise
	 */
	public boolean isStatusSigner();

	/**
	 * Sets whether this legal signer is status signer.
	 *
	 * @param statusSigner the status signer of this legal signer
	 */
	public void setStatusSigner(boolean statusSigner);

	/**
	 * Returns the full name of this legal signer.
	 *
	 * @return the full name of this legal signer
	 */
	@AutoEscape
	public String getFullName();

	/**
	 * Sets the full name of this legal signer.
	 *
	 * @param fullName the full name of this legal signer
	 */
	public void setFullName(String fullName);

}