/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package organizationalStructure.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

import org.osgi.annotation.versioning.ProviderType;

import organizationalStructure.service.model.organizations;
import organizationalStructure.service.model.organizationsModel;
import organizationalStructure.service.model.organizationsSoap;

/**
 * The base model implementation for the organizations service. Represents a row in the &quot;portal_organizations&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface </code>organizationsModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link organizationsImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see organizationsImpl
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class organizationsModelImpl
	extends BaseModelImpl<organizations> implements organizationsModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a organizations model instance should use the <code>organizations</code> interface instead.
	 */
	public static final String TABLE_NAME = "portal_organizations";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"organizationId", Types.BIGINT},
		{"organizationCode", Types.VARCHAR}, {"groupId", Types.BIGINT},
		{"name", Types.VARCHAR}, {"description", Types.VARCHAR},
		{"leader", Types.VARCHAR}, {"member", Types.BIGINT},
		{"address", Types.VARCHAR}, {"phoneNumber", Types.VARCHAR},
		{"position", Types.VARCHAR}, {"parentId", Types.BIGINT},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"createUser", Types.BIGINT}, {"modifiedUser", Types.BIGINT},
		{"status", Types.BIGINT}, {"thuTu", Types.INTEGER}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("organizationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("organizationCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("description", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("leader", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("member", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("address", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("phoneNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("position", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("parentId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("createUser", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("modifiedUser", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("status", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("thuTu", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE =
		"create table portal_organizations (uuid_ VARCHAR(75) null,organizationId LONG not null primary key,organizationCode VARCHAR(75) null,groupId LONG,name VARCHAR(75) null,description VARCHAR(75) null,leader VARCHAR(75) null,member LONG,address VARCHAR(75) null,phoneNumber VARCHAR(75) null,position VARCHAR(75) null,parentId LONG,createDate DATE null,modifiedDate DATE null,createUser LONG,modifiedUser LONG,status LONG,thuTu INTEGER)";

	public static final String TABLE_SQL_DROP =
		"drop table portal_organizations";

	public static final String ORDER_BY_JPQL =
		" ORDER BY organizations.organizationId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY portal_organizations.organizationId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final long GROUPID_COLUMN_BITMASK = 1L;

	public static final long UUID_COLUMN_BITMASK = 2L;

	public static final long ORGANIZATIONID_COLUMN_BITMASK = 4L;

	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
		_entityCacheEnabled = entityCacheEnabled;
	}

	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
		_finderCacheEnabled = finderCacheEnabled;
	}

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static organizations toModel(organizationsSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		organizations model = new organizationsImpl();

		model.setUuid(soapModel.getUuid());
		model.setOrganizationId(soapModel.getOrganizationId());
		model.setOrganizationCode(soapModel.getOrganizationCode());
		model.setGroupId(soapModel.getGroupId());
		model.setName(soapModel.getName());
		model.setDescription(soapModel.getDescription());
		model.setLeader(soapModel.getLeader());
		model.setMember(soapModel.getMember());
		model.setAddress(soapModel.getAddress());
		model.setPhoneNumber(soapModel.getPhoneNumber());
		model.setPosition(soapModel.getPosition());
		model.setParentId(soapModel.getParentId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setCreateUser(soapModel.getCreateUser());
		model.setModifiedUser(soapModel.getModifiedUser());
		model.setStatus(soapModel.getStatus());
		model.setThuTu(soapModel.getThuTu());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<organizations> toModels(organizationsSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<organizations> models = new ArrayList<organizations>(
			soapModels.length);

		for (organizationsSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public organizationsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _organizationId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setOrganizationId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _organizationId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return organizations.class;
	}

	@Override
	public String getModelClassName() {
		return organizations.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<organizations, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<organizations, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<organizations, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((organizations)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<organizations, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<organizations, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(organizations)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<organizations, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<organizations, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, organizations>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			organizations.class.getClassLoader(), organizations.class,
			ModelWrapper.class);

		try {
			Constructor<organizations> constructor =
				(Constructor<organizations>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException roe) {
					throw new InternalError(roe);
				}
			};
		}
		catch (NoSuchMethodException nsme) {
			throw new InternalError(nsme);
		}
	}

	private static final Map<String, Function<organizations, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<organizations, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<organizations, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<organizations, Object>>();
		Map<String, BiConsumer<organizations, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<organizations, ?>>();

		attributeGetterFunctions.put("uuid", organizations::getUuid);
		attributeSetterBiConsumers.put(
			"uuid", (BiConsumer<organizations, String>)organizations::setUuid);
		attributeGetterFunctions.put(
			"organizationId", organizations::getOrganizationId);
		attributeSetterBiConsumers.put(
			"organizationId",
			(BiConsumer<organizations, Long>)organizations::setOrganizationId);
		attributeGetterFunctions.put(
			"organizationCode", organizations::getOrganizationCode);
		attributeSetterBiConsumers.put(
			"organizationCode",
			(BiConsumer<organizations, String>)
				organizations::setOrganizationCode);
		attributeGetterFunctions.put("groupId", organizations::getGroupId);
		attributeSetterBiConsumers.put(
			"groupId",
			(BiConsumer<organizations, Long>)organizations::setGroupId);
		attributeGetterFunctions.put("name", organizations::getName);
		attributeSetterBiConsumers.put(
			"name", (BiConsumer<organizations, String>)organizations::setName);
		attributeGetterFunctions.put(
			"description", organizations::getDescription);
		attributeSetterBiConsumers.put(
			"description",
			(BiConsumer<organizations, String>)organizations::setDescription);
		attributeGetterFunctions.put("leader", organizations::getLeader);
		attributeSetterBiConsumers.put(
			"leader",
			(BiConsumer<organizations, String>)organizations::setLeader);
		attributeGetterFunctions.put("member", organizations::getMember);
		attributeSetterBiConsumers.put(
			"member",
			(BiConsumer<organizations, Long>)organizations::setMember);
		attributeGetterFunctions.put("address", organizations::getAddress);
		attributeSetterBiConsumers.put(
			"address",
			(BiConsumer<organizations, String>)organizations::setAddress);
		attributeGetterFunctions.put(
			"phoneNumber", organizations::getPhoneNumber);
		attributeSetterBiConsumers.put(
			"phoneNumber",
			(BiConsumer<organizations, String>)organizations::setPhoneNumber);
		attributeGetterFunctions.put("position", organizations::getPosition);
		attributeSetterBiConsumers.put(
			"position",
			(BiConsumer<organizations, String>)organizations::setPosition);
		attributeGetterFunctions.put("parentId", organizations::getParentId);
		attributeSetterBiConsumers.put(
			"parentId",
			(BiConsumer<organizations, Long>)organizations::setParentId);
		attributeGetterFunctions.put(
			"createDate", organizations::getCreateDate);
		attributeSetterBiConsumers.put(
			"createDate",
			(BiConsumer<organizations, Date>)organizations::setCreateDate);
		attributeGetterFunctions.put(
			"modifiedDate", organizations::getModifiedDate);
		attributeSetterBiConsumers.put(
			"modifiedDate",
			(BiConsumer<organizations, Date>)organizations::setModifiedDate);
		attributeGetterFunctions.put(
			"createUser", organizations::getCreateUser);
		attributeSetterBiConsumers.put(
			"createUser",
			(BiConsumer<organizations, Long>)organizations::setCreateUser);
		attributeGetterFunctions.put(
			"modifiedUser", organizations::getModifiedUser);
		attributeSetterBiConsumers.put(
			"modifiedUser",
			(BiConsumer<organizations, Long>)organizations::setModifiedUser);
		attributeGetterFunctions.put("status", organizations::getStatus);
		attributeSetterBiConsumers.put(
			"status",
			(BiConsumer<organizations, Long>)organizations::setStatus);
		attributeGetterFunctions.put("thuTu", organizations::getThuTu);
		attributeSetterBiConsumers.put(
			"thuTu",
			(BiConsumer<organizations, Integer>)organizations::setThuTu);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		_columnBitmask |= UUID_COLUMN_BITMASK;

		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getOrganizationId() {
		return _organizationId;
	}

	@Override
	public void setOrganizationId(long organizationId) {
		_columnBitmask = -1L;

		_organizationId = organizationId;
	}

	@JSON
	@Override
	public String getOrganizationCode() {
		if (_organizationCode == null) {
			return "";
		}
		else {
			return _organizationCode;
		}
	}

	@Override
	public void setOrganizationCode(String organizationCode) {
		_organizationCode = organizationCode;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public String getName() {
		if (_name == null) {
			return "";
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@JSON
	@Override
	public String getDescription() {
		if (_description == null) {
			return "";
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@JSON
	@Override
	public String getLeader() {
		if (_leader == null) {
			return "";
		}
		else {
			return _leader;
		}
	}

	@Override
	public void setLeader(String leader) {
		_leader = leader;
	}

	@JSON
	@Override
	public long getMember() {
		return _member;
	}

	@Override
	public void setMember(long member) {
		_member = member;
	}

	@JSON
	@Override
	public String getAddress() {
		if (_address == null) {
			return "";
		}
		else {
			return _address;
		}
	}

	@Override
	public void setAddress(String address) {
		_address = address;
	}

	@JSON
	@Override
	public String getPhoneNumber() {
		if (_phoneNumber == null) {
			return "";
		}
		else {
			return _phoneNumber;
		}
	}

	@Override
	public void setPhoneNumber(String phoneNumber) {
		_phoneNumber = phoneNumber;
	}

	@JSON
	@Override
	public String getPosition() {
		if (_position == null) {
			return "";
		}
		else {
			return _position;
		}
	}

	@Override
	public void setPosition(String position) {
		_position = position;
	}

	@JSON
	@Override
	public long getParentId() {
		return _parentId;
	}

	@Override
	public void setParentId(long parentId) {
		_parentId = parentId;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getCreateUser() {
		return _createUser;
	}

	@Override
	public void setCreateUser(long createUser) {
		_createUser = createUser;
	}

	@JSON
	@Override
	public long getModifiedUser() {
		return _modifiedUser;
	}

	@Override
	public void setModifiedUser(long modifiedUser) {
		_modifiedUser = modifiedUser;
	}

	@JSON
	@Override
	public long getStatus() {
		return _status;
	}

	@Override
	public void setStatus(long status) {
		_status = status;
	}

	@JSON
	@Override
	public int getThuTu() {
		return _thuTu;
	}

	@Override
	public void setThuTu(int thuTu) {
		_thuTu = thuTu;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			0, organizations.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public organizations toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, organizations>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		organizationsImpl organizationsImpl = new organizationsImpl();

		organizationsImpl.setUuid(getUuid());
		organizationsImpl.setOrganizationId(getOrganizationId());
		organizationsImpl.setOrganizationCode(getOrganizationCode());
		organizationsImpl.setGroupId(getGroupId());
		organizationsImpl.setName(getName());
		organizationsImpl.setDescription(getDescription());
		organizationsImpl.setLeader(getLeader());
		organizationsImpl.setMember(getMember());
		organizationsImpl.setAddress(getAddress());
		organizationsImpl.setPhoneNumber(getPhoneNumber());
		organizationsImpl.setPosition(getPosition());
		organizationsImpl.setParentId(getParentId());
		organizationsImpl.setCreateDate(getCreateDate());
		organizationsImpl.setModifiedDate(getModifiedDate());
		organizationsImpl.setCreateUser(getCreateUser());
		organizationsImpl.setModifiedUser(getModifiedUser());
		organizationsImpl.setStatus(getStatus());
		organizationsImpl.setThuTu(getThuTu());

		organizationsImpl.resetOriginalValues();

		return organizationsImpl;
	}

	@Override
	public int compareTo(organizations organizations) {
		int value = 0;

		if (getOrganizationId() < organizations.getOrganizationId()) {
			value = -1;
		}
		else if (getOrganizationId() > organizations.getOrganizationId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof organizations)) {
			return false;
		}

		organizations organizations = (organizations)obj;

		long primaryKey = organizations.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return _entityCacheEnabled;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return _finderCacheEnabled;
	}

	@Override
	public void resetOriginalValues() {
		organizationsModelImpl organizationsModelImpl = this;

		organizationsModelImpl._originalUuid = organizationsModelImpl._uuid;

		organizationsModelImpl._originalGroupId =
			organizationsModelImpl._groupId;

		organizationsModelImpl._setOriginalGroupId = false;

		organizationsModelImpl._setModifiedDate = false;

		organizationsModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<organizations> toCacheModel() {
		organizationsCacheModel organizationsCacheModel =
			new organizationsCacheModel();

		organizationsCacheModel.uuid = getUuid();

		String uuid = organizationsCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			organizationsCacheModel.uuid = null;
		}

		organizationsCacheModel.organizationId = getOrganizationId();

		organizationsCacheModel.organizationCode = getOrganizationCode();

		String organizationCode = organizationsCacheModel.organizationCode;

		if ((organizationCode != null) && (organizationCode.length() == 0)) {
			organizationsCacheModel.organizationCode = null;
		}

		organizationsCacheModel.groupId = getGroupId();

		organizationsCacheModel.name = getName();

		String name = organizationsCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			organizationsCacheModel.name = null;
		}

		organizationsCacheModel.description = getDescription();

		String description = organizationsCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			organizationsCacheModel.description = null;
		}

		organizationsCacheModel.leader = getLeader();

		String leader = organizationsCacheModel.leader;

		if ((leader != null) && (leader.length() == 0)) {
			organizationsCacheModel.leader = null;
		}

		organizationsCacheModel.member = getMember();

		organizationsCacheModel.address = getAddress();

		String address = organizationsCacheModel.address;

		if ((address != null) && (address.length() == 0)) {
			organizationsCacheModel.address = null;
		}

		organizationsCacheModel.phoneNumber = getPhoneNumber();

		String phoneNumber = organizationsCacheModel.phoneNumber;

		if ((phoneNumber != null) && (phoneNumber.length() == 0)) {
			organizationsCacheModel.phoneNumber = null;
		}

		organizationsCacheModel.position = getPosition();

		String position = organizationsCacheModel.position;

		if ((position != null) && (position.length() == 0)) {
			organizationsCacheModel.position = null;
		}

		organizationsCacheModel.parentId = getParentId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			organizationsCacheModel.createDate = createDate.getTime();
		}
		else {
			organizationsCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			organizationsCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			organizationsCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		organizationsCacheModel.createUser = getCreateUser();

		organizationsCacheModel.modifiedUser = getModifiedUser();

		organizationsCacheModel.status = getStatus();

		organizationsCacheModel.thuTu = getThuTu();

		return organizationsCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<organizations, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<organizations, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<organizations, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((organizations)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<organizations, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<organizations, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<organizations, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((organizations)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, organizations>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private static boolean _entityCacheEnabled;
	private static boolean _finderCacheEnabled;

	private String _uuid;
	private String _originalUuid;
	private long _organizationId;
	private String _organizationCode;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private String _name;
	private String _description;
	private String _leader;
	private long _member;
	private String _address;
	private String _phoneNumber;
	private String _position;
	private long _parentId;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _createUser;
	private long _modifiedUser;
	private long _status;
	private int _thuTu;
	private long _columnBitmask;
	private organizations _escapedModel;

}