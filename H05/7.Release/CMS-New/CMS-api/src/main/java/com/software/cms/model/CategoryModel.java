/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.software.cms.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Category service. Represents a row in the &quot;soft_cms_Category&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.software.cms.model.impl.CategoryModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.software.cms.model.impl.CategoryImpl</code>.
 * </p>
 *
 * @author DungNV
 * @see Category
 * @generated
 */
@ProviderType
public interface CategoryModel extends BaseModel<Category> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a category model instance should use the {@link Category} interface instead.
	 */

	/**
	 * Returns the primary key of this category.
	 *
	 * @return the primary key of this category
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this category.
	 *
	 * @param primaryKey the primary key of this category
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this category.
	 *
	 * @return the uuid of this category
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this category.
	 *
	 * @param uuid the uuid of this category
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the category ID of this category.
	 *
	 * @return the category ID of this category
	 */
	public long getCategoryId();

	/**
	 * Sets the category ID of this category.
	 *
	 * @param categoryId the category ID of this category
	 */
	public void setCategoryId(long categoryId);

	/**
	 * Returns the group ID of this category.
	 *
	 * @return the group ID of this category
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this category.
	 *
	 * @param groupId the group ID of this category
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the language of this category.
	 *
	 * @return the language of this category
	 */
	@AutoEscape
	public String getLanguage();

	/**
	 * Sets the language of this category.
	 *
	 * @param language the language of this category
	 */
	public void setLanguage(String language);

	/**
	 * Returns the title of this category.
	 *
	 * @return the title of this category
	 */
	@AutoEscape
	public String getTitle();

	/**
	 * Sets the title of this category.
	 *
	 * @param title the title of this category
	 */
	public void setTitle(String title);

	/**
	 * Returns the created date of this category.
	 *
	 * @return the created date of this category
	 */
	public Date getCreatedDate();

	/**
	 * Sets the created date of this category.
	 *
	 * @param createdDate the created date of this category
	 */
	public void setCreatedDate(Date createdDate);

	/**
	 * Returns the modified date of this category.
	 *
	 * @return the modified date of this category
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this category.
	 *
	 * @param modifiedDate the modified date of this category
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the created user of this category.
	 *
	 * @return the created user of this category
	 */
	public long getCreatedUser();

	/**
	 * Sets the created user of this category.
	 *
	 * @param createdUser the created user of this category
	 */
	public void setCreatedUser(long createdUser);

	/**
	 * Returns the modified user of this category.
	 *
	 * @return the modified user of this category
	 */
	public long getModifiedUser();

	/**
	 * Sets the modified user of this category.
	 *
	 * @param modifiedUser the modified user of this category
	 */
	public void setModifiedUser(long modifiedUser);

	/**
	 * Returns the path of this category.
	 *
	 * @return the path of this category
	 */
	@AutoEscape
	public String getPath();

	/**
	 * Sets the path of this category.
	 *
	 * @param path the path of this category
	 */
	public void setPath(String path);

	/**
	 * Returns the description of this category.
	 *
	 * @return the description of this category
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this category.
	 *
	 * @param description the description of this category
	 */
	public void setDescription(String description);

	/**
	 * Returns the display of this category.
	 *
	 * @return the display of this category
	 */
	public boolean getDisplay();

	/**
	 * Returns <code>true</code> if this category is display.
	 *
	 * @return <code>true</code> if this category is display; <code>false</code> otherwise
	 */
	public boolean isDisplay();

	/**
	 * Sets whether this category is display.
	 *
	 * @param display the display of this category
	 */
	public void setDisplay(boolean display);

	/**
	 * Returns the parent ID of this category.
	 *
	 * @return the parent ID of this category
	 */
	public long getParentId();

	/**
	 * Sets the parent ID of this category.
	 *
	 * @param parentId the parent ID of this category
	 */
	public void setParentId(long parentId);

	/**
	 * Returns the active of this category.
	 *
	 * @return the active of this category
	 */
	public long getActive();

	/**
	 * Sets the active of this category.
	 *
	 * @param active the active of this category
	 */
	public void setActive(long active);

	/**
	 * Returns the cate child of this category.
	 *
	 * @return the cate child of this category
	 */
	@AutoEscape
	public String getCateChild();

	/**
	 * Sets the cate child of this category.
	 *
	 * @param cateChild the cate child of this category
	 */
	public void setCateChild(String cateChild);

	/**
	 * Returns the thu tu of this category.
	 *
	 * @return the thu tu of this category
	 */
	public int getThuTu();

	/**
	 * Sets the thu tu of this category.
	 *
	 * @param thuTu the thu tu of this category
	 */
	public void setThuTu(int thuTu);

	/**
	 * Returns the link of this category.
	 *
	 * @return the link of this category
	 */
	@AutoEscape
	public String getLink();

	/**
	 * Sets the link of this category.
	 *
	 * @param link the link of this category
	 */
	public void setLink(String link);

	/**
	 * Returns the is rss of this category.
	 *
	 * @return the is rss of this category
	 */
	public boolean getIsRss();

	/**
	 * Returns <code>true</code> if this category is is rss.
	 *
	 * @return <code>true</code> if this category is is rss; <code>false</code> otherwise
	 */
	public boolean isIsRss();

	/**
	 * Sets whether this category is is rss.
	 *
	 * @param isRss the is rss of this category
	 */
	public void setIsRss(boolean isRss);

}