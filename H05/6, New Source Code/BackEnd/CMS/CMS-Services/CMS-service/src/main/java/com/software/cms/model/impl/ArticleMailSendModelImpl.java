/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.software.cms.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;

import com.software.cms.model.ArticleMailSend;
import com.software.cms.model.ArticleMailSendModel;
import com.software.cms.model.ArticleMailSendSoap;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the ArticleMailSend service. Represents a row in the &quot;soft_cms_ArticleMailSend&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>ArticleMailSendModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ArticleMailSendImpl}.
 * </p>
 *
 * @author DungNV
 * @see ArticleMailSendImpl
 * @generated
 */
@JSON(strict = true)
public class ArticleMailSendModelImpl
	extends BaseModelImpl<ArticleMailSend> implements ArticleMailSendModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a article mail send model instance should use the <code>ArticleMailSend</code> interface instead.
	 */
	public static final String TABLE_NAME = "soft_cms_ArticleMailSend";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"mailSendId", Types.BIGINT},
		{"createDate", Types.TIMESTAMP}, {"groupId", Types.BIGINT},
		{"nguoiGui", Types.VARCHAR}, {"mailNguoiGui", Types.VARCHAR},
		{"nguoiNhan", Types.VARCHAR}, {"mailNguoiNhan", Types.VARCHAR},
		{"tieuDe", Types.VARCHAR}, {"noiDung", Types.VARCHAR},
		{"articleId", Types.BIGINT}, {"categoryId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("mailSendId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("nguoiGui", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("mailNguoiGui", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("nguoiNhan", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("mailNguoiNhan", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tieuDe", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("noiDung", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("articleId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("categoryId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table soft_cms_ArticleMailSend (uuid_ VARCHAR(75) null,mailSendId LONG not null primary key,createDate DATE null,groupId LONG,nguoiGui VARCHAR(75) null,mailNguoiGui TEXT null,nguoiNhan TEXT null,mailNguoiNhan TEXT null,tieuDe TEXT null,noiDung TEXT null,articleId LONG,categoryId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table soft_cms_ArticleMailSend";

	public static final String ORDER_BY_JPQL =
		" ORDER BY articleMailSend.mailSendId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY soft_cms_ArticleMailSend.mailSendId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final long GROUPID_COLUMN_BITMASK = 1L;

	public static final long UUID_COLUMN_BITMASK = 2L;

	public static final long MAILSENDID_COLUMN_BITMASK = 4L;

	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
		_entityCacheEnabled = entityCacheEnabled;
	}

	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
		_finderCacheEnabled = finderCacheEnabled;
	}

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static ArticleMailSend toModel(ArticleMailSendSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		ArticleMailSend model = new ArticleMailSendImpl();

		model.setUuid(soapModel.getUuid());
		model.setMailSendId(soapModel.getMailSendId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setGroupId(soapModel.getGroupId());
		model.setNguoiGui(soapModel.getNguoiGui());
		model.setMailNguoiGui(soapModel.getMailNguoiGui());
		model.setNguoiNhan(soapModel.getNguoiNhan());
		model.setMailNguoiNhan(soapModel.getMailNguoiNhan());
		model.setTieuDe(soapModel.getTieuDe());
		model.setNoiDung(soapModel.getNoiDung());
		model.setArticleId(soapModel.getArticleId());
		model.setCategoryId(soapModel.getCategoryId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<ArticleMailSend> toModels(
		ArticleMailSendSoap[] soapModels) {

		if (soapModels == null) {
			return null;
		}

		List<ArticleMailSend> models = new ArrayList<ArticleMailSend>(
			soapModels.length);

		for (ArticleMailSendSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public ArticleMailSendModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _mailSendId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setMailSendId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _mailSendId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ArticleMailSend.class;
	}

	@Override
	public String getModelClassName() {
		return ArticleMailSend.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<ArticleMailSend, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<ArticleMailSend, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ArticleMailSend, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((ArticleMailSend)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<ArticleMailSend, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<ArticleMailSend, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(ArticleMailSend)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<ArticleMailSend, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<ArticleMailSend, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, ArticleMailSend>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			ArticleMailSend.class.getClassLoader(), ArticleMailSend.class,
			ModelWrapper.class);

		try {
			Constructor<ArticleMailSend> constructor =
				(Constructor<ArticleMailSend>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<ArticleMailSend, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<ArticleMailSend, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<ArticleMailSend, Object>>
			attributeGetterFunctions =
				new LinkedHashMap<String, Function<ArticleMailSend, Object>>();
		Map<String, BiConsumer<ArticleMailSend, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<ArticleMailSend, ?>>();

		attributeGetterFunctions.put("uuid", ArticleMailSend::getUuid);
		attributeSetterBiConsumers.put(
			"uuid",
			(BiConsumer<ArticleMailSend, String>)ArticleMailSend::setUuid);
		attributeGetterFunctions.put(
			"mailSendId", ArticleMailSend::getMailSendId);
		attributeSetterBiConsumers.put(
			"mailSendId",
			(BiConsumer<ArticleMailSend, Long>)ArticleMailSend::setMailSendId);
		attributeGetterFunctions.put(
			"createDate", ArticleMailSend::getCreateDate);
		attributeSetterBiConsumers.put(
			"createDate",
			(BiConsumer<ArticleMailSend, Date>)ArticleMailSend::setCreateDate);
		attributeGetterFunctions.put("groupId", ArticleMailSend::getGroupId);
		attributeSetterBiConsumers.put(
			"groupId",
			(BiConsumer<ArticleMailSend, Long>)ArticleMailSend::setGroupId);
		attributeGetterFunctions.put("nguoiGui", ArticleMailSend::getNguoiGui);
		attributeSetterBiConsumers.put(
			"nguoiGui",
			(BiConsumer<ArticleMailSend, String>)ArticleMailSend::setNguoiGui);
		attributeGetterFunctions.put(
			"mailNguoiGui", ArticleMailSend::getMailNguoiGui);
		attributeSetterBiConsumers.put(
			"mailNguoiGui",
			(BiConsumer<ArticleMailSend, String>)
				ArticleMailSend::setMailNguoiGui);
		attributeGetterFunctions.put(
			"nguoiNhan", ArticleMailSend::getNguoiNhan);
		attributeSetterBiConsumers.put(
			"nguoiNhan",
			(BiConsumer<ArticleMailSend, String>)ArticleMailSend::setNguoiNhan);
		attributeGetterFunctions.put(
			"mailNguoiNhan", ArticleMailSend::getMailNguoiNhan);
		attributeSetterBiConsumers.put(
			"mailNguoiNhan",
			(BiConsumer<ArticleMailSend, String>)
				ArticleMailSend::setMailNguoiNhan);
		attributeGetterFunctions.put("tieuDe", ArticleMailSend::getTieuDe);
		attributeSetterBiConsumers.put(
			"tieuDe",
			(BiConsumer<ArticleMailSend, String>)ArticleMailSend::setTieuDe);
		attributeGetterFunctions.put("noiDung", ArticleMailSend::getNoiDung);
		attributeSetterBiConsumers.put(
			"noiDung",
			(BiConsumer<ArticleMailSend, String>)ArticleMailSend::setNoiDung);
		attributeGetterFunctions.put(
			"articleId", ArticleMailSend::getArticleId);
		attributeSetterBiConsumers.put(
			"articleId",
			(BiConsumer<ArticleMailSend, Long>)ArticleMailSend::setArticleId);
		attributeGetterFunctions.put(
			"categoryId", ArticleMailSend::getCategoryId);
		attributeSetterBiConsumers.put(
			"categoryId",
			(BiConsumer<ArticleMailSend, Long>)ArticleMailSend::setCategoryId);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		_columnBitmask |= UUID_COLUMN_BITMASK;

		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getMailSendId() {
		return _mailSendId;
	}

	@Override
	public void setMailSendId(long mailSendId) {
		_mailSendId = mailSendId;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public String getNguoiGui() {
		if (_nguoiGui == null) {
			return "";
		}
		else {
			return _nguoiGui;
		}
	}

	@Override
	public void setNguoiGui(String nguoiGui) {
		_nguoiGui = nguoiGui;
	}

	@JSON
	@Override
	public String getMailNguoiGui() {
		if (_mailNguoiGui == null) {
			return "";
		}
		else {
			return _mailNguoiGui;
		}
	}

	@Override
	public void setMailNguoiGui(String mailNguoiGui) {
		_mailNguoiGui = mailNguoiGui;
	}

	@JSON
	@Override
	public String getNguoiNhan() {
		if (_nguoiNhan == null) {
			return "";
		}
		else {
			return _nguoiNhan;
		}
	}

	@Override
	public void setNguoiNhan(String nguoiNhan) {
		_nguoiNhan = nguoiNhan;
	}

	@JSON
	@Override
	public String getMailNguoiNhan() {
		if (_mailNguoiNhan == null) {
			return "";
		}
		else {
			return _mailNguoiNhan;
		}
	}

	@Override
	public void setMailNguoiNhan(String mailNguoiNhan) {
		_mailNguoiNhan = mailNguoiNhan;
	}

	@JSON
	@Override
	public String getTieuDe() {
		if (_tieuDe == null) {
			return "";
		}
		else {
			return _tieuDe;
		}
	}

	@Override
	public void setTieuDe(String tieuDe) {
		_tieuDe = tieuDe;
	}

	@JSON
	@Override
	public String getNoiDung() {
		if (_noiDung == null) {
			return "";
		}
		else {
			return _noiDung;
		}
	}

	@Override
	public void setNoiDung(String noiDung) {
		_noiDung = noiDung;
	}

	@JSON
	@Override
	public long getArticleId() {
		return _articleId;
	}

	@Override
	public void setArticleId(long articleId) {
		_articleId = articleId;
	}

	@JSON
	@Override
	public long getCategoryId() {
		return _categoryId;
	}

	@Override
	public void setCategoryId(long categoryId) {
		_categoryId = categoryId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			0, ArticleMailSend.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ArticleMailSend toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, ArticleMailSend>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ArticleMailSendImpl articleMailSendImpl = new ArticleMailSendImpl();

		articleMailSendImpl.setUuid(getUuid());
		articleMailSendImpl.setMailSendId(getMailSendId());
		articleMailSendImpl.setCreateDate(getCreateDate());
		articleMailSendImpl.setGroupId(getGroupId());
		articleMailSendImpl.setNguoiGui(getNguoiGui());
		articleMailSendImpl.setMailNguoiGui(getMailNguoiGui());
		articleMailSendImpl.setNguoiNhan(getNguoiNhan());
		articleMailSendImpl.setMailNguoiNhan(getMailNguoiNhan());
		articleMailSendImpl.setTieuDe(getTieuDe());
		articleMailSendImpl.setNoiDung(getNoiDung());
		articleMailSendImpl.setArticleId(getArticleId());
		articleMailSendImpl.setCategoryId(getCategoryId());

		articleMailSendImpl.resetOriginalValues();

		return articleMailSendImpl;
	}

	@Override
	public int compareTo(ArticleMailSend articleMailSend) {
		long primaryKey = articleMailSend.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ArticleMailSend)) {
			return false;
		}

		ArticleMailSend articleMailSend = (ArticleMailSend)obj;

		long primaryKey = articleMailSend.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return _entityCacheEnabled;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return _finderCacheEnabled;
	}

	@Override
	public void resetOriginalValues() {
		ArticleMailSendModelImpl articleMailSendModelImpl = this;

		articleMailSendModelImpl._originalUuid = articleMailSendModelImpl._uuid;

		articleMailSendModelImpl._originalGroupId =
			articleMailSendModelImpl._groupId;

		articleMailSendModelImpl._setOriginalGroupId = false;

		articleMailSendModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ArticleMailSend> toCacheModel() {
		ArticleMailSendCacheModel articleMailSendCacheModel =
			new ArticleMailSendCacheModel();

		articleMailSendCacheModel.uuid = getUuid();

		String uuid = articleMailSendCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			articleMailSendCacheModel.uuid = null;
		}

		articleMailSendCacheModel.mailSendId = getMailSendId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			articleMailSendCacheModel.createDate = createDate.getTime();
		}
		else {
			articleMailSendCacheModel.createDate = Long.MIN_VALUE;
		}

		articleMailSendCacheModel.groupId = getGroupId();

		articleMailSendCacheModel.nguoiGui = getNguoiGui();

		String nguoiGui = articleMailSendCacheModel.nguoiGui;

		if ((nguoiGui != null) && (nguoiGui.length() == 0)) {
			articleMailSendCacheModel.nguoiGui = null;
		}

		articleMailSendCacheModel.mailNguoiGui = getMailNguoiGui();

		String mailNguoiGui = articleMailSendCacheModel.mailNguoiGui;

		if ((mailNguoiGui != null) && (mailNguoiGui.length() == 0)) {
			articleMailSendCacheModel.mailNguoiGui = null;
		}

		articleMailSendCacheModel.nguoiNhan = getNguoiNhan();

		String nguoiNhan = articleMailSendCacheModel.nguoiNhan;

		if ((nguoiNhan != null) && (nguoiNhan.length() == 0)) {
			articleMailSendCacheModel.nguoiNhan = null;
		}

		articleMailSendCacheModel.mailNguoiNhan = getMailNguoiNhan();

		String mailNguoiNhan = articleMailSendCacheModel.mailNguoiNhan;

		if ((mailNguoiNhan != null) && (mailNguoiNhan.length() == 0)) {
			articleMailSendCacheModel.mailNguoiNhan = null;
		}

		articleMailSendCacheModel.tieuDe = getTieuDe();

		String tieuDe = articleMailSendCacheModel.tieuDe;

		if ((tieuDe != null) && (tieuDe.length() == 0)) {
			articleMailSendCacheModel.tieuDe = null;
		}

		articleMailSendCacheModel.noiDung = getNoiDung();

		String noiDung = articleMailSendCacheModel.noiDung;

		if ((noiDung != null) && (noiDung.length() == 0)) {
			articleMailSendCacheModel.noiDung = null;
		}

		articleMailSendCacheModel.articleId = getArticleId();

		articleMailSendCacheModel.categoryId = getCategoryId();

		return articleMailSendCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<ArticleMailSend, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<ArticleMailSend, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ArticleMailSend, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((ArticleMailSend)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<ArticleMailSend, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<ArticleMailSend, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ArticleMailSend, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((ArticleMailSend)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, ArticleMailSend>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private static boolean _entityCacheEnabled;
	private static boolean _finderCacheEnabled;

	private String _uuid;
	private String _originalUuid;
	private long _mailSendId;
	private Date _createDate;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private String _nguoiGui;
	private String _mailNguoiGui;
	private String _nguoiNhan;
	private String _mailNguoiNhan;
	private String _tieuDe;
	private String _noiDung;
	private long _articleId;
	private long _categoryId;
	private long _columnBitmask;
	private ArticleMailSend _escapedModel;

}